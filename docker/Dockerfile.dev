# MIT License
#
# Copyright (c) 2023 Sophie Katz
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# When updating this version, also the update environment variables below.
FROM ubuntu:22.04

# Versions
# NOTE: When updating any of these versions, make sure to also update the
# *_LAST_UPDATED date so that out-of-date dependencies can be tracked.

ENV PORTOBELLO_UBUNTU_VERSION_LAST_UPDATED=2023-02-03
ENV PORTOBELLO_UBUNTU_VERSION=22.04

ENV PORTOBELLO_NVM_VERSION_LAST_UPDATED=2023-02-03
ENV PORTOBELLO_NVM_VERSION=v0.39.3

ENV PORTOBELLO_NODE_VERSION_LAST_UPDATED=2023-02-03
ENV PORTOBELLO_NODE_VERSION=v18.13.0

ENV PORTOBELLO_YARN_VERSION_LAST_UPDATED=2023-02-03
ENV PORTOBELLO_YARN_VERSION=v3.3.1

# Update and install system packages
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y \
        build-essential \
        curl \
        default-jre \
        git \
        libssl-dev \
        lld \
        locales \
        pkg-config \
        postgresql-client

# Fix locale
ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8

RUN locale-gen en_US.UTF-8

# Add user
RUN useradd -m -s /bin/bash dev
USER dev

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly; \
    . /home/dev/.cargo/env && \
    rustup --version && \
    rustc --version && \
    cargo --version

# Install additional Rust components
RUN . /home/dev/.cargo/env && \
    rustup component add llvm-tools-preview

# Install global Rust dependencies
RUN . /home/dev/.cargo/env && \
    cargo install sea-orm-cli

# Set Rust environment variables
ENV CARGO_TARGET_DIR /home/dev/target

# Install NVM
ENV NVM_DIR /home/dev/.nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/${PORTOBELLO_NVM_VERSION}/install.sh | bash; \
    . $NVM_DIR/nvm.sh && \
    nvm --version

# Install Node.JS
RUN . $NVM_DIR/nvm.sh && \
    nvm install ${PORTOBELLO_NODE_VERSION} && \
    nvm use ${PORTOBELLO_NODE_VERSION} && \
    node --version

# Install Yarn
RUN . $NVM_DIR/nvm.sh && \
    corepack enable && \
    corepack prepare yarn@${PORTOBELLO_YARN_VERSION} --activate && \
    yarn --version

# Update .bashrc
RUN echo -e "\npython3 /app/scripts/CheckForUpdates.py\necho\n" >> /home/dev/.bashrc

# Write image info to within image
RUN mkdir /home/dev/image && \
    date "+%F %T" > /home/dev/image/build_timestamp
