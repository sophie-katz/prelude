# MIT License
#
# Copyright (c) 2023 Sophie Katz
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

openapi: 3.1.0

info:
  title: Portobello API
  version: 0.1.0

paths:
  /user:
    get:
      summary: List users
      description: Returns a list of all existing users in the instance
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
  /user/{id}:
    get:
      summary: Get user by id
      description: Gets a single user by their user id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the user to get
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userResponse"
        "400":
          description: "No user with id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

components:
  schemas:
    userResponse:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: integer
          description: Unique id for the user
          minimum: 1
          example: 5
        username:
          type: string
          description: Username for the user
          minLength: 1
          pattern: "^[a-zA-Z0-9_.-]*[a-zA-Z0-9]+[a-zA-Z0-9_.-]*$"
          example: "admin"
        icon:
          type: string
          description: An HTML base64 image value
          minLength: 1
          pattern: "^data:image/[a-z0-9]+;base64, [a-zA-Z0-9/]+$"
          example: "data:image/jpeg;base64, LzlqLzRBQ... <!-- Base64 data -->"
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          minLength: 1
          example: "no user with id"

