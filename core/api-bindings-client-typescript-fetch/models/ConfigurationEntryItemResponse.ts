/* tslint:disable */
/* eslint-disable */
/**
 * Portobello API
 * Primary REST API for Portobello
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: sophie@sophiekatz.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigurationValueResponse } from './ConfigurationValueResponse';
import {
    ConfigurationValueResponseFromJSON,
    ConfigurationValueResponseFromJSONTyped,
    ConfigurationValueResponseToJSON,
} from './ConfigurationValueResponse';

/**
 * An item containing a single value of a configuration key
 * @export
 * @interface ConfigurationEntryItemResponse
 */
export interface ConfigurationEntryItemResponse {
    /**
     * A unique id for the object
     * @type {number}
     * @memberof ConfigurationEntryItemResponse
     */
    id: number;
    /**
     * 
     * @type {ConfigurationValueResponse}
     * @memberof ConfigurationEntryItemResponse
     */
    value: ConfigurationValueResponse;
}

/**
 * Check if a given object implements the ConfigurationEntryItemResponse interface.
 */
export function instanceOfConfigurationEntryItemResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function ConfigurationEntryItemResponseFromJSON(json: any): ConfigurationEntryItemResponse {
    return ConfigurationEntryItemResponseFromJSONTyped(json, false);
}

export function ConfigurationEntryItemResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigurationEntryItemResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'value': ConfigurationValueResponseFromJSON(json['value']),
    };
}

export function ConfigurationEntryItemResponseToJSON(value?: ConfigurationEntryItemResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'value': ConfigurationValueResponseToJSON(value.value),
    };
}

