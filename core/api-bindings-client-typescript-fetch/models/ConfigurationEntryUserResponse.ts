/* tslint:disable */
/* eslint-disable */
/**
 * Portobello API
 * Primary REST API for Portobello
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: sophie@sophiekatz.us
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigurationEntryItemSetResponse } from './ConfigurationEntryItemSetResponse';
import {
    ConfigurationEntryItemSetResponseFromJSON,
    ConfigurationEntryItemSetResponseFromJSONTyped,
    ConfigurationEntryItemSetResponseToJSON,
} from './ConfigurationEntryItemSetResponse';

/**
 * The part of a configuration entry that is user-specific
 * @export
 * @interface ConfigurationEntryUserResponse
 */
export interface ConfigurationEntryUserResponse {
    /**
     * The id of a given user in the authentication provider service
     * @type {string}
     * @memberof ConfigurationEntryUserResponse
     */
    userId: string;
    /**
     * 
     * @type {ConfigurationEntryItemSetResponse}
     * @memberof ConfigurationEntryUserResponse
     */
    items: ConfigurationEntryItemSetResponse;
}

/**
 * Check if a given object implements the ConfigurationEntryUserResponse interface.
 */
export function instanceOfConfigurationEntryUserResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function ConfigurationEntryUserResponseFromJSON(json: any): ConfigurationEntryUserResponse {
    return ConfigurationEntryUserResponseFromJSONTyped(json, false);
}

export function ConfigurationEntryUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigurationEntryUserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'items': ConfigurationEntryItemSetResponseFromJSON(json['items']),
    };
}

export function ConfigurationEntryUserResponseToJSON(value?: ConfigurationEntryUserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'items': ConfigurationEntryItemSetResponseToJSON(value.items),
    };
}

